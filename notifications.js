/**
 * –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Å–∞–π—Ç–∞ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º
 */
class JewelryNotifications {
    constructor() {
        this.container = null;
        this.notifications = [];
        this.maxNotifications = 5;
        this.defaultDuration = 4000;
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    init() {
        this.createContainer();
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    createContainer() {
        this.container = document.createElement('div');
        this.container.className = 'notification-container';
        this.container.id = 'notification-container';
        document.body.appendChild(this.container);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     * @param {Object} options - –û–ø—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} options.title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} options.message - –°–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {string} options.type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (success, error, warning, info)
     * @param {number} options.duration - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     * @param {string} options.icon - –ò–∫–æ–Ω–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     * @param {boolean} options.autoClose - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
     */
    show(options = {}) {
        const {
            title = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
            message = '',
            type = 'info',
            duration = this.defaultDuration,
            icon = this.getDefaultIcon(type),
            autoClose = true
        } = options;

        const notification = this.createNotificationElement({
            title,
            message,
            type,
            icon
        });

        this.container.appendChild(notification);
        this.notifications.push(notification);

        if (this.notifications.length > this.maxNotifications) {
            this.removeNotification(this.notifications[0]);
        }

        setTimeout(() => {
            notification.classList.add('show');
        }, 10);

        if (autoClose && duration > 0) {
            this.autoCloseNotification(notification, duration);
        }

        this.addCloseHandler(notification);

        return notification;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    createNotificationElement({ title, message, type, icon }) {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        
        notification.innerHTML = `
            <div class="notification-content">
                <div class="notification-icon">${icon}</div>
                <div class="notification-text">
                    <div class="notification-title">${title}</div>
                    ${message ? `<div class="notification-message">${message}</div>` : ''}
                </div>
            </div>
            <button class="notification-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å">√ó</button>
            <div class="notification-progress"></div>
        `;

        return notification;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    getDefaultIcon(type) {
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è',
            default: 'üíé'
        };
        return icons[type] || icons.info;
    }

    /**
     * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    autoCloseNotification(notification, duration) {
        const progressBar = notification.querySelector('.notification-progress');
        
        if (progressBar) {
            progressBar.style.transition = `width ${duration}ms linear`;
            setTimeout(() => {
                progressBar.style.width = '0%';
            }, 10);
        }

        setTimeout(() => {
            this.removeNotification(notification);
        }, duration);
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
     */
    addCloseHandler(notification) {
        const closeBtn = notification.querySelector('.notification-close');
        if (closeBtn) {
            closeBtn.addEventListener('click', () => {
                this.removeNotification(notification);
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∫—Ä–æ–º–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è)
        notification.addEventListener('click', (e) => {
            if (!e.target.classList.contains('notification-close')) {
                this.removeNotification(notification);
            }
        });
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    removeNotification(notification) {
        if (!notification || !notification.parentNode) return;

        notification.classList.add('hide');
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
            
            // –£–¥–∞–ª—è–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞
            const index = this.notifications.indexOf(notification);
            if (index > -1) {
                this.notifications.splice(index, 1);
            }
        }, 400);
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    clearAll() {
        this.notifications.forEach(notification => {
            this.removeNotification(notification);
        });
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
     */
    showCartNotification(productName, price) {
        this.show({
            title: '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É',
            message: `${productName} - ${price} —Ä—É–±.`,
            type: 'success',
            icon: 'üõí',
            duration: 3000
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
     */
    showCartRemoveNotification(productName) {
        this.show({
            title: '–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã',
            message: `${productName}`,
            type: 'info',
            icon: 'üóëÔ∏è',
            duration: 2500
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã
     */
    showCartClearNotification() {
        this.show({
            title: '–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞',
            message: '–í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã',
            type: 'warning',
            icon: 'üßπ',
            duration: 3000
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–∏–¥–∫–µ
     */
    showDiscountNotification(percent) {
        this.show({
            title: `–°–∫–∏–¥–∫–∞ ${percent}%!`,
            message: '–ù–∞ –≤—Å–µ —É–∫—Ä–∞—à–µ–Ω–∏—è –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏',
            type: 'success',
            icon: 'üéâ',
            duration: 5000
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
     */
    showShippingNotification() {
        this.show({
            title: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞!',
            message: '–ü—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 5000 —Ä—É–±. –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏',
            type: 'info',
            icon: 'üöö',
            duration: 6000
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showError(message, title = '–û—à–∏–±–∫–∞') {
        this.show({
            title,
            message,
            type: 'error',
            duration: 5000
        });
    }

    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showInfo(message, title = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') {
        this.show({
            title,
            message,
            type: 'info',
            duration: 4000
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ-–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
     */
    showWarning(message, title = '–í–Ω–∏–º–∞–Ω–∏–µ') {
        this.show({
            title,
            message,
            type: 'warning',
            duration: 4500
        });
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccess(message, title = '–£—Å–ø–µ—à–Ω–æ') {
        this.show({
            title,
            message,
            type: 'success',
            duration: 3500
        });
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
let jewelryNotifications;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    jewelryNotifications = new JewelryNotifications();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = JewelryNotifications;
} 